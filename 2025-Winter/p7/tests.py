import unittest
from p7 import is_valid_sudoku #type: ignore

class TestSudoku(unittest.TestCase):
  def test_one(self):
    board = [
     ["5","3",".",".","7",".",".",".","."]
    ,["6",".",".","1","9","5",".",".","."]
    ,[".","9","8",".",".",".",".","6","."]
    ,["8",".",".",".","6",".",".",".","3"]
    ,["4",".",".","8",".","3",".",".","1"]
    ,["7",".",".",".","2",".",".",".","6"]
    ,[".","6",".",".",".",".","2","8","."]
    ,[".",".",".","4","1","9",".",".","5"]
    ,[".",".",".",".","8",".",".","7","9"]]
    self.assertEqual(
      is_valid_sudoku(board),
      True
    )

  def test_two(self):
    board = [
     ["8","3",".",".","7",".",".",".","."]
    ,["6",".",".","1","9","5",".",".","."]
    ,[".","9","8",".",".",".",".","6","."]
    ,["8",".",".",".","6",".",".",".","3"]
    ,["4",".",".","8",".","3",".",".","1"]
    ,["7",".",".",".","2",".",".",".","6"]
    ,[".","6",".",".",".",".","2","8","."]
    ,[".",".",".","4","1","9",".",".","5"]
    ,[".",".",".",".","8",".",".","7","9"]]
    self.assertEqual(
      is_valid_sudoku(board),
      False
    )

  def test_three(self):
    board = [
    [".",".",".",".",".",".",".",".","."]
   ,[".",".",".",".",".",".",".",".","."]
   ,[".",".",".",".",".",".",".",".","."]
   ,[".",".",".",".",".",".",".",".","."]
   ,[".",".",".",".",".",".",".",".","."]
   ,[".",".",".",".",".",".",".",".","."]
   ,[".",".",".",".",".",".",".",".","."]
   ,[".",".",".",".",".",".",".",".","."]
   ,[".",".",".",".",".",".",".",".","."]]
    self.assertEqual(
      is_valid_sudoku(board),
      True
    )

  def test_four(self):
    board = [
    ["1",".",".",".","8",".",".",".","."]
   ,[".","2",".",".",".",".",".",".","."]
   ,[".",".","3",".","2",".",".",".","."]
   ,[".",".",".","4",".",".",".",".","."]
   ,[".",".","7",".","5",".",".",".","."]
   ,[".",".",".",".",".","6",".",".","."]
   ,[".",".",".",".","3","5","7",".","."]
   ,[".",".",".",".",".",".",".","8","."]
   ,[".",".",".",".","1",".","2",".","9"]]
    self.assertEqual(
      is_valid_sudoku(board),
      True
    )

  def test_five(self):
    board = [
    ["1",".",".",".","8",".",".",".","."]
   ,[".","2",".",".",".",".",".",".","."]
   ,[".",".","3",".","2",".",".",".","."]
   ,[".",".",".","4",".",".",".",".","."]
   ,[".",".","7",".","5",".",".",".","."]
   ,[".",".",".",".",".","6",".",".","."]
   ,["1",".",".",".","3","5","7",".","."]
   ,[".",".",".",".",".",".",".","8","."]
   ,[".",".",".",".","1",".","2",".","9"]]
    self.assertEqual(
      is_valid_sudoku(board),
      False
    )


  def test_five(self):
    board = [
    [".",".",".",".",".",".",".",".","."]
    ,[".",".",".",".",".",".",".",".","."]
    ,[".",".",".",".",".",".",".",".","."]
    ,[".",".",".",".",".",".",".",".","."]
    ,[".",".",".",".",".",".",".",".","."]
    ,[".",".",".",".",".",".",".",".","."]
    ,[".",".",".",".",".",".",".",".","."]
    ,[".",".",".",".",".",".",".",".","."]
    ,[".",".",".",".",".",".",".",".","."]]
    self.assertEqual(
      is_valid_sudoku(board),
      False
    )

if __name__ == '__main__':
  unittest.main()
